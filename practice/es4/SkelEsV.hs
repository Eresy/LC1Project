module SkelEsV where

-- Haskell module generated by the BNF converter

import AbsEsV
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transExp :: Exp -> Result
transExp x = case x of
  IorF expi -> failure x
  ForI expf -> failure x
transExpI :: ExpI -> Result
transExpI x = case x of
  ITree integer expis -> failure x
  ILeaf integer -> failure x
transExpF :: ExpF -> Result
transExpF x = case x of
  FTree double expfs -> failure x
  FLeaf double -> failure x

