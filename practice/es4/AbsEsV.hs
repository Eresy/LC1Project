

module AbsEsV where

-- Haskell module generated by the BNF converter




data Exp = IorF ExpI | ForI ExpF
  deriving (Eq, Ord, Show, Read)

data ExpI = ITree Integer [ExpI] | ILeaf Integer
  deriving (Eq, Ord, Show, Read)

data ExpF = FTree Double [ExpF] | FLeaf Double
  deriving (Eq, Ord, Show, Read)

